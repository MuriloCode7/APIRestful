-> O m√©todo compare() do bcripts compara uma senha digitada em string com uma senha j√°
criptografada, e retorna true se forem iguais
_______________________________________________________________________________________________________________

-> Manipula√ß√£o de obrigatoriedade de dados com Joi e Celebrate:
ex:
password: Joi.string().optional(),
      password_confirmation: Joi.string()
      // valida se a nova senha e a confirmacao sao iguais
        .valid(Joi.ref('password'))
        // Se a nova senha tiver sido informada, a confirmacao sera exigida
        .when('password', {
          is: Joi.exist(),
          then: Joi.required(),
        }),
_______________________________________________________________________________________________________________

-> As defini√ß√µes de atributos que come√ßam com @ nas entidades
s√£o chamadas de Decorators
_______________________________________________________________________________________________________________

-> Vari√°veis de ambientes s√£o informa√ß√µes que configuramos em nossa aplica√ß√£o para que
tenham valores diferentes dependendo do ambiente em que a aplica√ß√£o est√° sendo executa√ß√£o
As valores das vari√°veis de ambiente n√£o v√£o para o Git, apenas os nomes delas
_______________________________________________________________________________________________________________

-> A biblioteca Class Transformer permite al√©m de outras coisas alterar a forma
como as informa√ß√µes das entidades ser√£o exibidas para os usuarios, permitindo at√© inibir atributos
_______________________________________________________________________________________________________________

-> Implementa√ß√£o do Redis para controle do cache. O cache guarda as requisi√ß√µes mais custosas
e as requisic√µes mais usadas
_______________________________________________________________________________________________________________

üìå Trabalhando com Redis no terminal:
- docker start redis -> Executa apenas o container do Redis
- docker exec -it redis sh -> Executa o redis cliente
- data # redis-cli
- set chave valor -> define um novo conjunto de chave e valor
- get chave -> traz o valor de uma chave
- del chave1 chave2 ... -> Deleta todas as chaves separadas¬†por¬†espa√ßo
_______________________________________________________________________________________________________________

-> A biblioteca rate-limiter controla a quantidade de requisicoes que a aplicacao
pode ter por minuto, dessa forma √© possivel proteger a aplicacao contra ataques como
brute force.
_______________________________________________________________________________________________________________

-> Usamos o Amazon S3 com os buckets para poder hospedar as imagens de avatar dos
usu√°rios
